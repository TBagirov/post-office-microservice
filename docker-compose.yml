
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - zookeeper_data:/var/lib/zookeeper
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: /var/lib/kafka/data
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - app-network

  minio:
    image: quay.io/minio/minio
    container_name: minio
    restart: unless-stopped
    ports:
      - "9000:9000"  # API MinIO (S3-compatible)
      - "9090:9090"  # Web UI MinIO
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    networks:
      - app-network
    command: server /data --console-address ":9090"

  ### === EUREKA SERVER === ###
  eureka-server:
    build: ./eureka-server
    container_name: eureka-server
    restart: always
    ports:
      - "8761:8761"
    networks:
      - app-network
    environment:
      - SERVER_PORT=8761
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://eureka-server:8761" ]
      interval: 5s
      timeout: 3s
      retries: 3

  ### === API GATEWAY === ###
  gateway-api:
    build: ./gateway-api
    container_name: gateway-api
    restart: always
    depends_on:
      eureka-server:
        condition: service_healthy
    ports:
      - "8765:8765"
    networks:
      - app-network
    environment:
      - SERVER_PORT=8765
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/


  # --- AUTH SERVICE ---
  auth-service:
    build: ./auth-service
    container_name: auth-service
    restart: always
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://auth-db:5432/auth_db
      - SPRING_DATASOURCE_USERNAME=auth_user
      - SPRING_DATASOURCE_PASSWORD=auth_pass
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      eureka-server:
        condition: service_healthy
      auth-db:
        condition: service_started
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://eureka-server:8761/eureka/apps/auth-service" ]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - app-network


  auth-db:
    image: postgres:15
    container_name: auth-db
    restart: always
    environment:
      - POSTGRES_USER=auth_user
      - POSTGRES_PASSWORD=auth_pass
      - POSTGRES_DB=auth_db
    ports:
      - "5433:5432"
    networks:
      - app-network
    volumes:
      - auth-db-data:/var/lib/postgresql/data

  # --- SUBSCRIBER SERVICE ---
  subscriber-service:
    build: ./subscriber-service
    container_name: subscriber-service
    restart: always
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://subscriber-db:5432/subscriber_db
      - SPRING_DATASOURCE_USERNAME=subscriber_user
      - SPRING_DATASOURCE_PASSWORD=subscriber_pass
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      eureka-server:
        condition: service_healthy
      subscriber-db:
        condition: service_started
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://eureka-server:8761/eureka/apps/subscriber-service" ]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - app-network

  subscriber-db:
    image: postgres:15
    container_name: subscriber-db
    restart: always
    environment:
      - POSTGRES_USER=subscriber_user
      - POSTGRES_PASSWORD=subscriber_pass
      - POSTGRES_DB=subscriber_db
    ports:
      - "5434:5432"
    networks:
      - app-network
    volumes:
      - subscriber-db-data:/var/lib/postgresql/data


  # --- POSTAL SERVICE ---
  postal-service:
    build: ./postal-service
    container_name: postal-service
    restart: always
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postal-db:5432/postal_db
      - SPRING_DATASOURCE_USERNAME=postal_user
      - SPRING_DATASOURCE_PASSWORD=postal_pass
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      eureka-server:
        condition: service_healthy
      postal-db:
        condition: service_started
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://eureka-server:8761/eureka/apps/postal-service" ]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - app-network

  postal-db:
    image: postgres:15
    container_name: postal-db
    restart: always
    environment:
      - POSTGRES_USER=postal_user
      - POSTGRES_PASSWORD=postal_pass
      - POSTGRES_DB=postal_db
    ports:
      - "5435:5432"
    networks:
      - app-network
    volumes:
      - postal-db-data:/var/lib/postgresql/data

  # --- PUBLICATION SERVICE ---
  publication-service:
    build: ./publication-service
    container_name: publication-service
    restart: always
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://publication-db:5432/publication_db
      - SPRING_DATASOURCE_USERNAME=publication_user
      - SPRING_DATASOURCE_PASSWORD=publication_pass
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      eureka-server:
        condition: service_healthy
      publication-db:
        condition: service_started
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://eureka-server:8761/eureka/apps/publication-service" ]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - app-network

  publication-db:
    image: postgres:15
    container_name: publication-db
    restart: always
    environment:
      - POSTGRES_USER=publication_user
      - POSTGRES_PASSWORD=publication_pass
      - POSTGRES_DB=publication_db
    ports:
      - "5436:5432"
    networks:
      - app-network
    volumes:
      - publication-db-data:/var/lib/postgresql/data

  # --- SUBSCRIPTION SERVICE ---
  subscription-service:
    build: ./subscription-service
    container_name: subscription-service
    restart: always
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://subscription-db:5432/subscription_db
      - SPRING_DATASOURCE_USERNAME=subscription_user
      - SPRING_DATASOURCE_PASSWORD=subscription_pass
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      eureka-server:
        condition: service_healthy
      subscription-db:
        condition: service_started
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://eureka-server:8761/eureka/apps/subscription-service" ]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - app-network

  subscription-db:
    image: postgres:15
    container_name: subscription-db
    restart: always
    environment:
      - POSTGRES_USER=subscription_user
      - POSTGRES_PASSWORD=subscription_pass
      - POSTGRES_DB=subscription_db
    ports:
      - "5437:5432"
    networks:
      - app-network
    volumes:
      - subscription-db-data:/var/lib/postgresql/data

# --- PAYMENT SERVICE ---
  payment-service:
    build: ./payment-service
    container_name: payment-service
    restart: always
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://payment-db:5432/payment_db
      - SPRING_DATASOURCE_USERNAME=payment_user
      - SPRING_DATASOURCE_PASSWORD=payment_pass
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      eureka-server:
        condition: service_healthy
      payment-db:
        condition: service_started
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://eureka-server:8761/eureka/apps/payment-service" ]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - app-network

  payment-db:
    image: postgres:15
    container_name: payment-db
    restart: always
    environment:
      - POSTGRES_USER=payment_user
      - POSTGRES_PASSWORD=payment_pass
      - POSTGRES_DB=payment_db
    ports:
      - "5438:5432"
    networks:
      - app-network
    volumes:
      - payment-db-data:/var/lib/postgresql/data

# --- NOTIFICATION SERVICE ---
  notification-service:
    build: ./notification-service
    container_name: notification-service
    restart: always
    depends_on:
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://eureka-server:8761/eureka/apps/notification-service" ]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - app-network
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/


networks:
  app-network:
    driver: bridge

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  minio_data:
    driver: local
  auth-db-data:
    driver: local
  subscriber-db-data:
    driver: local
  subscription-db-data:
    driver: local
  postal-db-data:
    driver: local
  publication-db-data:
    driver: local
  payment-db-data:
    driver: local

