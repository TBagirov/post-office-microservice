spring:
  application:
    name: payment-service


  datasource:
    url: jdbc:postgresql://payment-db:5432/${PAYMENT_DB_NAME}
    username: ${PAYMENT_DB_USER}
    password: ${PAYMENT_DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    show-sql: true

  kafka:
    bootstrap-servers: kafka:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: payment-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    listener:
      missing-topics-fatal: false


eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER}
  instance:
    prefer-ip-address: true  # ???????????? IP-????? ?????? ????? ?????

server:
  port: 0

internal:
  api-secret: ${INTERNAL_API_SECRET}

security:
  jwt:
    secret: ${JWT_SECRET}
    access-expiration: ${ACCESS_EXPIRATION}
    refresh-expiration: ${REFRESH_EXPIRATION}

resilience4j.circuitbreaker:
  instances:
    postalService:
      failureRateThreshold: 50  # ??????? Circuit Breaker ??? 50% ????????? ????????
      slowCallRateThreshold: 50
      slowCallDurationThreshold: 2s
      minimumNumberOfCalls: 5  # ??????? 5 ??????? ????? ?????????? ?????????
      slidingWindowSize: 10  # ???? ??? ??????? ???????
      permittedNumberOfCallsInHalfOpenState: 2  # ?????????? ??????? ??? Half-Open
      waitDurationInOpenState: 10s  # ??? ????? ????? ????? ???????? ??????????????


