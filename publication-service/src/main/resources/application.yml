spring:
  application:
    name: publication-service


  datasource:
    url: jdbc:postgresql://publication-db:5432/${PUBLICATION_DB_NAME}
    username: ${PUBLICATION_DB_USER}
    password: ${PUBLICATION_DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    show-sql: true

  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: publication-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER}
  instance:
    prefer-ip-address: true  # Использовать IP-адрес вместо имени хоста

springdoc:
  api-docs:
    enabled: true
    path: /api/publication/v3/api-docs
  swagger-ui:
    enabled: true
    path: /api/publication/swagger-ui.html


minio:
  endpoint: http://minio:9000
  accessKey: ${MINIO_ROOT_USER}
  secretKey: ${MINIO_ROOT_PASSWORD}
  bucket: book-covers

server:
  port: 0

internal:
  api-secret: ${INTERNAL_API_SECRET}

security:
  jwt:
    secret: ${JWT_SECRET}
    access-expiration: ${ACCESS_EXPIRATION}
    refresh-expiration: ${REFRESH_EXPIRATION}
